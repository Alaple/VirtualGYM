// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualGYM.Context;

namespace VirtualGYM.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VirtualGYM.Models.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId");

                    b.Property<int>("Esfuerzo");

                    b.Property<string>("Nombre");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("VirtualGYM.Models.Clase_Objetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdClasesId");

                    b.Property<int?>("IdObjetivosId");

                    b.Property<int?>("IdSocioId");

                    b.HasKey("Id");

                    b.HasIndex("IdClasesId");

                    b.HasIndex("IdObjetivosId");

                    b.HasIndex("IdSocioId");

                    b.ToTable("Clases_Objetivos");
                });

            modelBuilder.Entity("VirtualGYM.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion");

                    b.Property<string>("Mail");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("VirtualGYM.Models.Objetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("EsfuerzoTotal");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Objetivos");
                });

            modelBuilder.Entity("VirtualGYM.Models.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Costo");

                    b.Property<int?>("EmpresaId");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("VirtualGYM.Models.Rutina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId");

                    b.Property<int>("Esfuerzo");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("VirtualGYM.Models.Rutina_Objetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdObjetivosId");

                    b.Property<int?>("IdRutinasId");

                    b.Property<int?>("IdSocioId");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivosId");

                    b.HasIndex("IdRutinasId");

                    b.HasIndex("IdSocioId");

                    b.ToTable("Rutinas_Objetivos");
                });

            modelBuilder.Entity("VirtualGYM.Models.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Altura");

                    b.Property<string>("Apellido");

                    b.Property<string>("Clave");

                    b.Property<int>("Edad");

                    b.Property<int?>("IdEmpresaId");

                    b.Property<int?>("IdObjetivoId");

                    b.Property<string>("Nombre");

                    b.Property<double>("Peso");

                    b.Property<string>("Sexo");

                    b.Property<string>("Usuario");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresaId");

                    b.HasIndex("IdObjetivoId");

                    b.ToTable("Socios");
                });

            modelBuilder.Entity("VirtualGYM.Models.Clase", b =>
                {
                    b.HasOne("VirtualGYM.Models.Empresa")
                        .WithMany("IdClases")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("VirtualGYM.Models.Clase_Objetivo", b =>
                {
                    b.HasOne("VirtualGYM.Models.Clase", "IdClases")
                        .WithMany()
                        .HasForeignKey("IdClasesId");

                    b.HasOne("VirtualGYM.Models.Objetivo", "IdObjetivos")
                        .WithMany()
                        .HasForeignKey("IdObjetivosId");

                    b.HasOne("VirtualGYM.Models.Socio", "IdSocio")
                        .WithMany()
                        .HasForeignKey("IdSocioId");
                });

            modelBuilder.Entity("VirtualGYM.Models.Oferta", b =>
                {
                    b.HasOne("VirtualGYM.Models.Empresa")
                        .WithMany("IdOfertas")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("VirtualGYM.Models.Rutina", b =>
                {
                    b.HasOne("VirtualGYM.Models.Empresa")
                        .WithMany("IdRutinas")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("VirtualGYM.Models.Rutina_Objetivo", b =>
                {
                    b.HasOne("VirtualGYM.Models.Objetivo", "IdObjetivos")
                        .WithMany()
                        .HasForeignKey("IdObjetivosId");

                    b.HasOne("VirtualGYM.Models.Rutina", "IdRutinas")
                        .WithMany()
                        .HasForeignKey("IdRutinasId");

                    b.HasOne("VirtualGYM.Models.Socio", "IdSocio")
                        .WithMany()
                        .HasForeignKey("IdSocioId");
                });

            modelBuilder.Entity("VirtualGYM.Models.Socio", b =>
                {
                    b.HasOne("VirtualGYM.Models.Empresa", "IdEmpresa")
                        .WithMany("IdSocios")
                        .HasForeignKey("IdEmpresaId");

                    b.HasOne("VirtualGYM.Models.Objetivo", "IdObjetivo")
                        .WithMany()
                        .HasForeignKey("IdObjetivoId");
                });
#pragma warning restore 612, 618
        }
    }
}
